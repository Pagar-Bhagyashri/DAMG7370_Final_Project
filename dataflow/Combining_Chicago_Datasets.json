{
	"name": "Combining_Chicago_Datasets",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "CHICAGO_21_22",
						"type": "DatasetReference"
					},
					"name": "SrcChicago20212022"
				},
				{
					"dataset": {
						"referenceName": "CHICAGO_22_23",
						"type": "DatasetReference"
					},
					"name": "SrcChicago20222023"
				},
				{
					"dataset": {
						"referenceName": "CHICAGO_23_24",
						"type": "DatasetReference"
					},
					"name": "SrcChicago20232024"
				},
				{
					"dataset": {
						"referenceName": "CHICAGO_24_25",
						"type": "DatasetReference"
					},
					"name": "SrcChicago20242025"
				},
				{
					"dataset": {
						"referenceName": "CHICAGO_25",
						"type": "DatasetReference"
					},
					"name": "SrcChicago2025Present"
				}
			],
			"sinks": [],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          Inspection_ID as integer,",
				"          DBA_Name as string,",
				"          AKA_Name as string,",
				"          Facility_Type as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          Inspection_Date as string,",
				"          Inspection_Type as string,",
				"          Inspection_Result as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Violation_Category_ID as string,",
				"          Violation_Category as string,",
				"          Violation_Comments as string,",
				"          Violation_Point as long,",
				"          Risk_Level as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SrcChicago20212022",
				"source(output(",
				"          Inspection_ID as integer,",
				"          DBA_Name as string,",
				"          AKA_Name as string,",
				"          Facility_Type as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          Inspection_Date as string,",
				"          Inspection_Type as string,",
				"          Inspection_Result as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Violation_Category_ID as string,",
				"          Violation_Category as string,",
				"          Violation_Comments as string,",
				"          Violation_Point as long,",
				"          Risk_Level as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SrcChicago20222023",
				"source(output(",
				"          Inspection_ID as integer,",
				"          DBA_Name as string,",
				"          AKA_Name as string,",
				"          Facility_Type as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          Inspection_Date as string,",
				"          Inspection_Type as string,",
				"          Inspection_Result as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Violation_Category_ID as string,",
				"          Violation_Category as string,",
				"          Violation_Comments as string,",
				"          Violation_Point as long,",
				"          Risk_Level as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SrcChicago20232024",
				"source(output(",
				"          Inspection_ID as integer,",
				"          DBA_Name as string,",
				"          AKA_Name as string,",
				"          Facility_Type as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          Inspection_Date as string,",
				"          Inspection_Type as string,",
				"          Inspection_Result as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Violation_Category_ID as string,",
				"          Violation_Category as string,",
				"          Violation_Comments as string,",
				"          Violation_Point as long,",
				"          Risk_Level as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SrcChicago20242025",
				"source(output(",
				"          Inspection_ID as integer,",
				"          DBA_Name as string,",
				"          AKA_Name as string,",
				"          Facility_Type as string,",
				"          Address as string,",
				"          City as string,",
				"          State as string,",
				"          Zip as double,",
				"          Inspection_Date as string,",
				"          Inspection_Type as string,",
				"          Inspection_Result as string,",
				"          Latitude as string,",
				"          Longitude as string,",
				"          Violation_Category_ID as string,",
				"          Violation_Category as string,",
				"          Violation_Comments as string,",
				"          Violation_Point as long,",
				"          Risk_Level as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'parquet') ~> SrcChicago2025Present"
			]
		}
	}
}